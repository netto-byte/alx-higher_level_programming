==========================
Use case of matrix_divided
==========================

This module defines a division function that divides all int/floats in a list of lists ``matrix_divided(matrix, div)``. Where `matrix is a list of lists`` and ``div`` is a divisor.

USAGE
=====

This function accepts two arguments ``matrix`` (list of lists of integers/floats) and ``div`` (a divisor) and create a new matrix to return the divison of all elements in ``matrix[...]`` in two decimal places.

|*********************|
|TESTING WITH NUMBERS |
|*********************|

``matrix_divided(...)``: with a list of lists of integers
::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

``matrix_divided(...)``: with a list of lists of integers and floats
::
	>>> matrix = [[1, 2.2, 3.3], [4, 5.5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.73, 1.1], [1.33, 1.83, 2.0]]

``matrix_divided(...)``: with combination of int, float, positive and negative values
::
	>>> matrix = [[1, 2.2, 3], [-4.44, 5.555555, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.73, 1.0], [-1.48, 1.85, 2.0]]

``matrix_divided(...)``: with a list of an empty list (would succeed)
::
	>>> matrix = [[]]
	>>> matrix_divided(matrix, 3)
	[[]]

|*******************|
|TESTING EXCEPTIONS |
|*******************|

``matrix_divided(...)``: With an empty list
::
	>>> matrix = []
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

``matrix_divided(...)``: with a value '0' divisor
::
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

``matrix_divided(...)``: with divisor as non-numeric
::
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, '0')
	Traceback (most recent call last):
	TypeError: div must be a number

``matrix_divided(...)``: with one or more list(s) of the matrix bigger in size than others
::
	>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

``matrix_divided(...)``: with one or more of the element(s) of a inner list consist non-numeric
::
	>>> matrix = [[1, 'two', 3], [4, 5, 'six']]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
