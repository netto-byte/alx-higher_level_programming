========================
Use case of print_square
========================

The module defines a function that prints a square of size 'size'

USAGE
=====

This function accepts one arguement ``size`` which is used as the length and width of a square inorder to print

|********************|
|TESTING PRINT_SQUARE|
|********************|

``print_square(...)``: with a valid argument passed
::
	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(4)
	####
	####
	####
	####

``print_square(...)``: with a '0' value (prints nothing)
::
	>>> print_square(0)


|******************|
|TESTING EXCEPTIONS|
|******************|

``print_square(...)``: Without value passed
::
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

``print_square(...)``: with a negative value
::
	>>> print_square(-5)
	Traceback (most recent call last):
	ValueError: size must be >= 0

``print_square(...)``: with a float value
::
	>>> print_square(3.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

``print_square(...)``: without an argument
::
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'
